STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 1  Assembler
                                               d:\stm8\dbg1\main.asm

   1                         stm8/     
   2                         
   0  000000                                 #include "mapping.inc"
   1                                                          ;-------------------------------
                                                                ;-----------------------
   2                                                          ; SEGMENT MAPPING FILE 
                                                                ;AUTOMATICALLY GENERATED BY 
                                                                ;STVD
   3                                                          ; SHOULD NOT BE MANUALLY 
                                                                ;MODIFIED.
   4                                                          ; CHANGES WILL BE LOST WHEN FILE
                                                                ; IS REGENERATED.
   5                                                          ;-------------------------------
                                                                ;-----------------------
   6  000000                                 #define  RAM0 1
   7  000000                                 #define  ram0_segment_start 0
   8  000000                                 #define  ram0_segment_end FF
   9  000000                                 #define  RAM1 1
  10  000000                                 #define  ram1_segment_start 100
  11  000000                                 #define  ram1_segment_end 1FF
  12  000000                                 #define  stack_segment_start 200
  13  000000                                 #define  stack_segment_end 3FF
<END_OF_INCLUSION>
   0  000000                                 #include "stm8s003f3.inc"
   1                         ;----STM8S003F3 peripherial define file
   2                         ;--Registers of the MCU:
   3                                   
   4                                                          ;---CLK-----
   5  000000                                 #define  CLK_ICKR      $50C0;
   6  000000                                 #define  CLK_ECKR      $50C1;
   7  000000                                 #define  CLK_CMSR      $50C3;
   8  000000                                 #define  CLK_SWR       $50C4;
   9  000000                                 #define  CLK_SWCR      $50C5;
  10  000000                                 #define  CLK_CKDIVR    $50C6;
  11  000000                                 #define  CLK_PCKENR1    $50C7;
  12  000000                                 #define  CLK_CSSR       $50C8;
  13  000000                                 #define  CLK_CCOR       $50C9;
  14  000000                                 #define  CLK_PCKENR2    $50CA;
  15                                   
  16  000000                                 #define  HSERDY        #$02
  17  000000                                 #define  HSEEN         #$01
  18                                   
  19  000000                                 #define  SWIF    #$08 
  20  000000                                 #define  SWIEN         #$04
  21  000000                                 #define  SWEN          #$02
  22  000000                                 #define  SWBSY   #$01
  23                                   
  24  000000                                 #define  HSIDIV_1 #$00
  25  000000                                 #define  HSIDIV_2 #$08
  26  000000                                 #define  HSIDIV_4 #$10
  27  000000                                 #define  HSIDIV_8 #$18
  28                                   
  29  000000                                 #define  CPUDIV_1 #$00
  30  000000                                 #define  CPUDIV_2 #$01
  31  000000                                 #define  CPUDIV_4 #$02
  32  000000                                 #define  CPUDIV_8 #$03
  33  000000                                 #define  CPUDIV_16 #$04
  34  000000                                 #define  CPUDIV_32 #$05
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 2  Assembler
                                               d:\stm8\dbg1\main.asm

  35  000000                                 #define  CPUDIV_64 #$06
  36  000000                                 #define  CPUDIV_128 #$07
  37                                                          ;-------ITC------
  38  000000                                 #define  EXTI_CR1  $50A0  ;
  39  000000                                 #define  EXTI_CR2  $50A1  ;
  40                                                          ;----FLASH-------
  41  000000                                 #define  FLASH_CR1 $505A  ;
  42  000000                                 #define  FLASH_CR2 $505B  ;
  43  000000                                 #define  LASH_NCR2 $505C  ;
  44  000000                                 #define  FLASH_FPR $505D  ;
  45  000000                                 #define  FLASH _NFPR $505E  ; 	
  46  000000                                 #define  _NFPR $505E _IAPSR $505F  ;
  47                                                          ;--------PORT A-----
  48  000000                                 #define  PA_ODR        $5000;
  49  000000                                 #define  PA_IDR        $5001;
  50  000000                                 #define  PA_DDR        $5002;
  51  000000                                 #define  PA_CR1        $5003;
  52  000000                                 #define  PA_CR2  $5004  ;
  53                                                          ;--------PORT B------
  54  000000                                 #define  PB_ODR        $5005;
  55  000000                                 #define  PB_IDR        $5006;
  56  000000                                 #define  PB_DDR        $5007;
  57  000000                                 #define  PB_CR1        $5008;
  58  000000                                 #define  PB_CR2        $5009;
  59                                                          ;---------PORT  C-----
  60  000000                                 #define  PC_ODR        $500A;
  61  000000                                 #define  PC_IDR        $500B;
  62  000000                                 #define  PC_DDR        $500C;
  63  000000                                 #define  PC_CR1        $500D;
  64  000000                                 #define  PC_CR2        $500E;
  65                                   
  66                                                          ;----PORT D-------
  67  000000                                 #define  PD_ODR        $500F;
  68  000000                                 #define  PD_IDR        $5010;
  69  000000                                 #define  PD_DDR        $5011;
  70  000000                                 #define  PD_CR1        $5012;
  71  000000                                 #define  PD_CR2        $5013;
  72                                                          ;--------PORT E-------
  73  000000                                 #define  PE_ODR        $5014;
  74  000000                                 #define  PE_IDR        $5015;
  75  000000                                 #define  PE_DDR        $5016;
  76  000000                                 #define  PE_CR1        $5017;
  77  000000                                 #define  PE_CR2        $5018;
  78                                                          ;---------PORT F------
  79  000000                                 #define  PF_ODR        $5019;
  80  000000                                 #define  PF_IDR        $501A;
  81  000000                                 #define  PF_DDR        $501B;
  82  000000                                 #define  PF_CR1        $501C;
  83  000000                                 #define  PF_CR2        $501D;
  84                                                          ;------ITC---------
  85  000000                                 #define  $50A0 $50A0   ;
  86  000000                                 #define  $50A1 $50A1   ;
  87                                                          ;--------TIM 1----------
  88  000000                                 #define  TIM1_CR1  $5250  ;
  89  000000                                 #define  TIM1_CR2  $5251  ;
  90  000000                                 #define  TIM1_SMCR $5252  ;
  91  000000                                 #define  TIM1_ETR  $5253  ;
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 3  Assembler
                                               d:\stm8\dbg1\main.asm

  92  000000                                 #define  TIM1_IER  $5254  ;
  93  000000                                 #define  TIM1_SR1  $5255  ;
  94  000000                                 #define  TIM1_SR2  $5256  ;
  95  000000                                 #define  TIM1_EGR  $5257  ;
  96  000000                                 #define  TIM1_CCMR1 $5258  ;
  97  000000                                 #define  TIM1_CCMR2 $5259  ;
  98  000000                                 #define  TIM1_CCMR3 $525A  ;
  99  000000                                 #define  TIM1_CCMR4  $525B  ;
 100  000000                                 #define  TIM1_CCER1 $525C  ;
 101  000000                                 #define  TIM1_CCER2 $525D  ;
 102  000000                                 #define  TIM1_CNTRH $525E  ;
 103  000000                                 #define  TIM1_CNTRL  $255f  ;
 104  000000                                 #define  TIM1_PSCRH  $5260  ;
 105  000000                                 #define  TIM1_PSCRL $5261  ;
 106  000000                                 #define  TIM1_ARRH  $5262  ;
 107  000000                                 #define  TIM1_ARRL  $5263  ;
 108  000000                                 #define  TIM1_RCR   $5264  ;
 109  000000                                 #define  TIM1_CCR1H $5265  ;
 110  000000                                 #define  TIM1_CCR1L $5266  ;
 111  000000                                 #define  TIM1_CCR2H $5267  ;
 112  000000                                 #define  TIM1_CCR2L $5268  ;
 113  000000                                 #define  TIM1_CCR3H $5269  ;
 114  000000                                 #define  TIM1_CCR3L $526A  ;
 115  000000                                 #define  TIM1_CCR4H  $526B  ;
 116  000000                                 #define  TIM1_CCR4L $526C  ;
 117  000000                                 #define  TIM1_BKR   $526D  ;
 118  000000                                 #define  TIM1_DTR   $526E  ;
 119  000000                                 #define  TIM1_OISR  $526F  ;
 120                                   
 121  000000                                 #define  TIM_CR1_CENTER_ALINGN_1 #$20
 122  000000                                 #define  TIM_CR1_CENTER_ALINGN_2 #$40
 123  000000                                 #define  TIM_CR1_CENTER_ALINGN_3 #$60
 124  000000                                 #define  TIM_CR1_COUNTS_UP #$00
 125  000000                                 #define  TIM_CR1_COUNTS_DOWN #$10
 126  000000                                 #define  TIM_CR1_PRELOAD #$80
 127  000000                                 #define  TIM_CCMR_ACTIVE_ON_MATCH #$10
 128  000000                                 #define  TIM_CCMR_INACTIVE_ON_MATCH #$20
 129  000000                                 #define  TIM_CCMR_TOGGLE   #$30
 130  000000                                 #define  TIM_CCMR_FORCE_INACTIVE #$40 
 131  000000                                 #define  TIM_CCMR_FORCE_ACTIVE   #$50
 132                                                          ;-------------SPI----------
 133  000000                                 #define  SPI_CR1  $5200  ;
 134  000000                                 #define  SPI_CR2 $5201  ;
 135  000000                                 #define  SPI_ICR  $5202  ;
 136  000000                                 #define  SPI_SR        $5203;
 137  000000                                 #define  SPI_DR        $5204;
 138  000000                                 #define  SPI_CRCPR     $5205;
 139  000000                                 #define  SPI_RXCRCR    $5206;
 140  000000                                 #define  SPI_TXCRCR    $5207;
 141                                                          ;---------------I2C----------
 142  000000                                 #define  I2C_CR1       $5210;
 143  000000                                 #define  I2C_CR2       $5211;
 144  000000                                 #define  I2C_FREQR     $5212;
 145  000000                                 #define  I2C_OARL      $5213;
 146  000000                                 #define  I2C_OARH      $5214;
 147  000000                                 #define  I2C_DR        $5216;
 148  000000                                 #define  I2C_SR1       $5217;
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 4  Assembler
                                               d:\stm8\dbg1\main.asm

 149  000000                                 #define  I2C_SR2       $5218;
 150  000000                                 #define  I2C_SR3       $5219;
 151  000000                                 #define  I2C_ITR       $521A;
 152  000000                                 #define  I2C_CCRL      $521B;
 153  000000                                 #define  I2C_CCRH      $521C;
 154  000000                                 #define  I2C_TRISER    $521D;
 155  000000                                 #define  I2C_PECR      $521E;
 156                                                          ;------------UART--------------
 157  000000                                 #define  UART1_SR      $5230;
 158  000000                                 #define  UART1_DR      $5231;
 159  000000                                 #define  UART1_BRR1    $5232;
 160  000000                                 #define  UART1_BRR2    $5233;
 161  000000                                 #define  UART1_CR1     $5234;
 162  000000                                 #define  UART1_CR2     $5235;
 163  000000                                 #define  UART1_CR3     $5236;
 164  000000                                 #define  UART1_CR4     $5237;
 165  000000                                 #define  UART1_CR5     $5238;
 166  000000                                 #define  UART1_GTR     $5239;
 167  000000                                 #define  UART1_PSCR    $523A;
 168                                                          ;----------TIM4----------------
 169  000000                                 #define  TIM4_CR1      $5340;
 170  000000                                 #define  TIM4_IER      $5343;
 171  000000                                 #define  TIM4_SR       $5344;
 172  000000                                 #define  TIM4_EGR      $5345;
 173  000000                                 #define  TIM4_CNTR     $5346;
 174  000000                                 #define  TIM4_PSCR     $5347;
 175  000000                                 #define  TIM4_ARR      $5348;
 176                                                          ;---------ADC1-----------------
 177                                   
 178  000000                                 #define  ADC_CSR       $5400;
 179  000000                                 #define  ADC_CR1       $5401;
 180  000000                                 #define  ADC_CR2       $5402;
 181  000000                                 #define  ADC_CR3       $5403;
 182  000000                                 #define  ADC_DRH       $5404;
 183  000000                                 #define  ADC_DRL       $5405;
 184  000000                                 #define  ADC_TDRH      $5406;
 185  000000                                 #define  ADC_TDRL      $5407;
 186  000000                                 #define  ADC_HTRH      $5408;
 187  000000                                 #define  ADC_HTRL      $5409;
 188  000000                                 #define  ADC_LTRH      $540A;
 189  000000                                 #define  ADC_LTRL      $540B;
 190  000000                                 #define  ADC_AWSRH     $540C;
 191  000000                                 #define  ADC_AWSRL     $540D;
 192  000000                                 #define  ADC_AWCRH     $540E;
 193  000000                                 #define  ADC_AWCRL     $540F;
 194                                                          ;;buffers
 195  000000                                 #define  ADC_DB0RH     $53E0;
 196  000000                                 #define  ADC_DB0RL     $53E1;
 197  000000                                 #define  ADC_DB1RH     $53E2;
 198  000000                                 #define  ADC_DB1RL     $53E3;
 199  000000                                 #define  ADC_DB2RH     $53E4;
 200  000000                                 #define  ADC_DB2RL     $53E5;
 201  000000                                 #define  ADC_DB3RH     $53E6;
 202  000000                                 #define  ADC_DB3RL     $53E7;
 203  000000                                 #define  ADC_DB4RH     $53E8;
 204  000000                                 #define  ADC_DB4RL     $53E9;
 205  000000                                 #define  ADC_DB5RH     $53EA;
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 5  Assembler
                                               d:\stm8\dbg1\main.asm

 206  000000                                 #define  ADC_DB5RL     $53EB;
 207  000000                                 #define  ADC_DB6RH     $53EC;
 208  000000                                 #define  ADC_DB6RL     $53ED;
 209  000000                                 #define  ADC_DB7RH     $53EC;
 210  000000                                 #define  ADC_DB7RL     $53ED;
 211  000000                                 #define  ADC_DB8RH     $53EC;
 212  000000                                 #define  ADC_DB8RL     $53ED;
 213                                   
 214                                   
 215                                                          ;----------TIM2----------
 216  000000                                 #define  TIM2_CR1      $5300;
 217  000000                                 #define  TIM2_IER      $5303;
 218  000000                                 #define  TIM2_SR1      $5304;
 219  000000                                 #define  TIM2_SR2      $5305;
 220  000000                                 #define  TIM2_EGR      $5306;
 221  000000                                 #define  TIM2_CCMR1    $5307;
 222  000000                                 #define  TIM2_CCMR2    $5308;
 223  000000                                 #define  TIM2_CCMR3    $5309;
 224  000000                                 #define  TIM2_CCER1    $530A;
 225  000000                                 #define  TIM2_CCER2    $530B;
 226  000000                                 #define  TIM2_CNTRH    $530C;
 227  000000                                 #define  TIM2_CNTRL      $530D  ;
 228  000000                                 #define  TIM2_PSCR     $530E;
 229  000000                                 #define  TIM2_ARRH     $530F;
 230  000000                                 #define  TIM2_ARRL     $5310;
 231  000000                                 #define  TIM2_CCR1H    $5311;
 232  000000                                 #define  TIM2_CCR1L    $5312;
 233  000000                                 #define  TIM2_CCR2H      $5313  ;
 234  000000                                 #define  TIM2_CCR2L    $5314;
 235  000000                                 #define  TIM2_CCR3H    $5315;
 236  000000                                 #define  TIM2_CCR3L    $5316;
 237                                   
 238                                   
<END_OF_INCLUSION>
   5                         
   6                                   segment  'rom'     
   7                         main.l    
   8                                                          ; initialize SP
   9  000000   AE03FF                        ldw      X,#stack_end
  10  000003   94                            ldw      SP,X
  11                         
  12  000004                                 #ifdef   1             
  13                                                          ; clear RAM0
  14  000000                       ram0_start.b  EQU      $0
  15  0000FF                       ram0_end.b  EQU      $FF
  16  000004   AE0000                        ldw      X,#ram0_start
  17                         clear_ram0.l  
  18  000007   7F                            clr      (X)
  19  000008   5C                            incw     X
  20  000009   A300FF                        cpw      X,#ram0_end   
  21  00000C R 23F9                          jrule    clear_ram0
  22  00000E                                 #endif   
  23                         
  24  00000E                                 #ifdef   1
  25                                                          ; clear RAM1
  26  000100                       ram1_start.w  EQU      $100
  27  0001FF                       ram1_end.w  EQU      $1FF          
  28  00000E   AE0100                        ldw      X,#ram1_start
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 6  Assembler
                                               d:\stm8\dbg1\main.asm

  29                         clear_ram1.l  
  30  000011   7F                            clr      (X)
  31  000012   5C                            incw     X
  32  000013   A301FF                        cpw      X,#ram1_end   
  33  000016 R 23F9                          jrule    clear_ram1
  34  000018                                 #endif   
  35                         
  36                                                          ; clear stack
  37  000200                       stack_start.w  EQU      $200
  38  0003FF                       stack_end.w  EQU      $3FF
  39  000018   AE0200                        ldw      X,#stack_start
  40                         clear_stack.l  
  41  00001B   7F                            clr      (X)
  42  00001C   5C                            incw     X
  43  00001D   A303FF                        cpw      X,#stack_end  
  44  000020 R 23F9                          jrule    clear_stack
  45                         ;______________________________________
  46                         ;  _   _ ___  ___ _ __   _ __ ___   __ _(_)_ __  
  47                         ; | | | / __|/ _ \ '__| | '_ ` _ \ / _` | | '_ \ 
  48                         ; | |_| \__ \  __/ |    | | | | | | (_| | | | | |
  49                         ;  \__,_|___/\___|_|    |_| |_| |_|\__,_|_|_| |_|
  50  000022   A600                          LD       A, #$00
  51  000024   88                            PUSH     A
  52  000025 R CD0000                        CALL     clkSetHsiDivider
  53  000028   84                            POP      A
  54  000029   A6FF                          LD       A, #$FF
  55  00002B   C750C7                        LD       $50C7, A
  56  00002E   A68A                          LD       A, #$8A
  57  000030   C750CA                        LD       $50CA, A
  58                                                          ;--turn on quartz
  59  000033 R CD0000                        CALL     clkSwitchToCrystal
  60                                   
  61                                                          ;--PC6-output 
  62  000036   A6D8                          LD       A, #$D8       ; 3,4,6,7  
  63  000038   C7500C                        LD       $500C, A
  64  00003B   C7500D                        LD       $500D, A
  65  00003E   C7500E                        LD       $500E, A
  66                                                          ;--PA3
  67  000041   A600                          LD       A, #$00       ;  
  68  000043   C75002                        LD       $5002, A
  69  000046   C75003                        LD       $5003, A
  70  000049   C75004                        LD       $5004, A
  71                                                          ;--D
  72  00004C   A600                          LD       A, #$00       ;  
  73  00004E   C75011                        LD       $5011, A
  74  000051   C75012                        LD       $5012, A
  75  000054   C75013                        LD       $5013, A
  76                                   
  77                         
  78                                   
  79                                                          ;@presc16,  
  80                                                          ;@base16, -> base of counter, 
                                                                ;ARRL
  81                                                          ;@comp16, -> pulse width, CCR1 
                                                                ;content
  82                                                          ;@mode8,  -> (CCMR) : $60 
                                                                ;PWM_MODE1
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 7  Assembler
                                               d:\stm8\dbg1\main.asm

  83                                                          ;$70 iPWM_MODE2
  84                                                          ;additional:  $04 fast, $08 
                                                                ;preload en.
  85                                                          ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
  86                                                          ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
  87                                   
  88                                   
  89  000057   AE000F                        LDW      X, #$000F     ;@presc16,  
  90  00005A   89                            PUSHW    X
  91  00005B   AE03FF                        LDW      X, #$03FF     ;@base16, -> base of counter, 
                                                                ;ARRL
  92  00005E   89                            PUSHW    X
  93  00005F   AE000F                        LDW      X, #$000f     ;@comp16, -> capture compare 
                                                                ;CCR1 content
  94  000062   89                            PUSHW    X
  95  000063   A660                          LD       A, #$60       ;@mode8,  -> (CCMR)PIN  
                                                                ;beheviavour: $10 active on 
                                                                ;match
  96  000065   88                            PUSH     A
  97  000066   A600                          LD       A, #$00       ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
  98  000068   88                            PUSH     A
  99  000069   A600                          LD       A ,#$00       ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 100  00006B   88                            PUSH     A             
 101  00006C R CD0000                        call     tim1PwmCh2Setup
 102  00006F   5B09                          ADDW     SP, #$09
 103  000071   AE000F                        LDW      X, #$000F     ;@presc16,  
 104  000074   89                            PUSHW    X
 105  000075   AE03FF                        LDW      X, #$03FF     ;@base16, -> base of counter, 
                                                                ;ARRL
 106  000078   89                            PUSHW    X
 107  000079   AE000F                        LDW      X, #$000f     ;@comp16, -> capture compare 
                                                                ;CCR1 content
 108  00007C   89                            PUSHW    X
 109  00007D   A660                          LD       A, #$60       ;@mode8,  -> (CCMR)PIN  
                                                                ;beheviavour: $10 active on 
                                                                ;match
 110  00007F   88                            PUSH     A
 111  000080   A600                          LD       A, #$00       ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 112  000082   88                            PUSH     A
 113  000083   A600                          LD       A ,#$00       ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 114  000085   88                            PUSH     A             
 115  000086 R CD0000                        call     tim1PwmCh3Setup
 116  000089   5B09                          ADDW     SP, #$09
 117  00008B   AE000F                        LDW      X, #$000F     ;@presc16,  
 118  00008E   89                            PUSHW    X
 119  00008F   AE03FF                        LDW      X, #$03FF     ;@base16, -> base of counter, 
                                                                ;ARRL
 120  000092   89                            PUSHW    X
 121  000093   AE000F                        LDW      X, #$000f     ;@comp16, -> capture compare 
                                                                ;CCR1 content
 122  000096   89                            PUSHW    X
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 8  Assembler
                                               d:\stm8\dbg1\main.asm

 123  000097   A660                          LD       A, #$60       ;@mode8,  -> (CCMR)PIN  
                                                                ;beheviavour: $10 active on 
                                                                ;match
 124  000099   88                            PUSH     A
 125  00009A   A600                          LD       A, #$00       ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 126  00009C   88                            PUSH     A
 127  00009D   A600                          LD       A ,#$00       ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 128  00009F   88                            PUSH     A             
 129  0000A0 R CD0000                        call     tim1PwmCh4Setup
 130  0000A3   5B09                          ADDW     SP, #$09
 131  0000A5   AE000F                        LDW      X, #$000F     ;@presc16,  
 132  0000A8   89                            PUSHW    X
 133  0000A9   AE03FF                        LDW      X, #$03FF     ;@base16, -> base of counter, 
                                                                ;ARRL
 134  0000AC   89                            PUSHW    X
 135  0000AD   AE000F                        LDW      X, #$000f     ;@comp16, -> capture compare 
                                                                ;CCR1 content
 136  0000B0   89                            PUSHW    X
 137  0000B1   A660                          LD       A, #$60       ;@mode8,  -> (CCMR)PIN  
                                                                ;beheviavour: $10 active on 
                                                                ;match
 138  0000B3   88                            PUSH     A
 139  0000B4   A600                          LD       A, #$00       ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 140  0000B6   88                            PUSH     A
 141  0000B7   A600                          LD       A ,#$00       ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 142  0000B9   88                            PUSH     A             
 143  0000BA R CD0000                        call     tim1PwmCh1Setup
 144  0000BD   5B09                          ADDW     SP, #$09
 145                                   
 146                                                          ;----ADC
 147  0000BF   A606                          LD       A, #$06       ;@channel8, $00->AIN0, 
                                                                ;$01->AIN1, #$0F->AIN15
 148  0000C1   88                            PUSH     A
 149  0000C2   A600                          LD       A, #$00       ;@prescaler, $00->/2, $10->/3, 
                                                                ;$20->/4, $
 150  0000C4   88                            PUSH     A
 151  0000C5 R CD0000                        CALL     adcSingleScanModeSetup
 152  0000C8   5B02                          ADDW     SP, #$02
 153                                                          ;---interrupt enable
 154  0000CA   A601                          LD       A, #$01       ; UIE
 155  0000CC   C75254                        LD       $5254, A
 156                         
 157                         
 158                         infinite_loop.l  
 159                                   
 160  0000CF   8F                            wfi      
 161  0000D0 R 20FD                          jra      infinite_loop
 162                                   
 163                         
 164                                   
 165                         
 166                         ;------------------------------	
 167                         ;  _            _   
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 9  Assembler
                                               d:\stm8\dbg1\main.asm

 168                         ; | |_ ___  ___| |_ 
 169                         ; | __/ _ \/ __| __|
 170                         ; | ||  __/\__ \ |_ 
 171                         ;  \__\___||___/\__|
 172                         ;-------------------------------
 173                                                          ;--TEST PASSED!
 174                                                          ;===PROCEDURE 'tim1PwmCh1Setup'
 175                                                          ;@presc16,  
 176                                                          ;@base16, -> base of counter, 
                                                                ;ARRL
 177                                                          ;@comp16, -> pulse width, CCR1 
                                                                ;content
 178                                                          ;@mode8,  -> (CCMR) : $60 
                                                                ;PWM_MODE1
 179                                                          ;$70 iPWM_MODE2
 180                                                          ;additional:  $04 fast, $08 
                                                                ;preload en.
 181                                                          ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 182                                                          ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 183                                                          ; SP after RETURN +9
 184                                                          ;stack frame:
 185                                                          ;[v16a|return|prel|pol|mode|comp
                                                                ;|base|presc]
 186                         tim1PwmCh1Setup  
 187  0000D2   88                            PUSH     A
 188                                                          ;allocate memory
 189  0000D3   5201                          SUBW     SP, #$01      
 190                                                          ;-variables
 191  0000D5                                 #define  _006_v8a  $00 
 192  0000D5                                 #define  _006_prel $05
 193  0000D5                                 #define  _006_pol $06
 194  0000D5                                 #define  _006_mode $07
 195  0000D5                                 #define  _006_compH $08
 196  0000D5                                 #define  _006_compL $09
 197  0000D5                                 #define  _006_baseH $0A
 198  0000D5                                 #define  _006_baseL $0B
 199  0000D5                                 #define  _006_prescH $0C
 200  0000D5                                 #define  _006_prescL $0D
 201                                                          ;--disable timer
 202                                                          ;--disable timer
 203  0000D5   72115250                      BRES     $5250,#$00
 204                                                          ;--load comparand, Hi firstly
 205  0000D9   7B08                          LD       A, ($08,SP)
 206  0000DB   C75265                        LD       $5265, A
 207  0000DE   7B09                          LD       A, ($09,SP)
 208  0000E0   C75266                        LD       $5266, A
 209                                                          ;--prescaler high byte firstly
 210  0000E3   7B0C                          LD       A, ($0C,SP)
 211  0000E5   C75260                        LD       $5260, A      
 212  0000E8   7B0D                          LD       A, ($0D,SP)
 213  0000EA   C75261                        LD       $5261, A
 214                                                          ;--load base, high byte first
 215  0000ED   7B0A                          LD       A, ($0A,SP)
 216  0000EF   C75262                        LD       $5262, A
 217  0000F2   7B0B                          LD       A, ($0B,SP)
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 10  Assembler
                                               d:\stm8\dbg1\main.asm

 218  0000F4   C75263                        LD       $5263, A
 219                                                          ;--load CCMR1
 220  0000F7   7B07                          LD       A, ($07,SP)
 221  0000F9   C75258                        LD       $5258, A
 222                                                          ;--polarity
 223                                                          ;--1) read and store 
 224                                                          ; content of another channels
 225  0000FC   C6525C                        LD       A, $525C
 226  0000FF   A4F0                          AND      A, #$F0
 227  000101   6B00                          LD       ($00,SP), A   ; store
 228                                                          ;--2)load data for loading in 
                                                                ;register
 229  000103   7B06                          LD       A, ($06,SP)
 230  000105   AA01                          OR       A, #$01       ; turn on channel 1
 231                                                          ;--3)apply others regs
 232  000107   1A00                          OR       A, ($00,SP)
 233  000109   C7525C                        LD       $525C, A
 234                                                          ;--turn on main channels
 235  00010C   721E526D                      BSET     $526D, #$07   ; MOE bit
 236                                                          ;--CR1
 237  000110   7B05                          LD       A, ($05,SP)
 238  000112   C75250                        LD       $5250, A
 239  000115   72105250                      BSET     $5250, #$00
 240                                                          ;free memory
 241  000119   5B01                          ADDW     SP, #$01
 242  00011B   84                            POP      A
 243  00011C   81                            RET      
 244                                   
 245                                   
 246                                                          ;--TEST PASSED!
 247                                                          ;===PROCEDURE 'tim1PwmCh2Setup'
 248                                                          ;@presc16,  
 249                                                          ;@base16, -> base of counter, 
                                                                ;ARRL
 250                                                          ;@comp16, ->  pulse width, CCR1 
                                                                ;content
 251                                                          ;@mode8,  -> (CCMR) : $60 
                                                                ;PWM_MODE1
 252                                                          ;$70 iPWM_MODE2
 253                                                          ;additional:  $04 fast, $08 
                                                                ;preload en.
 254                                                          ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 255                                                          ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 256                                                          ;SP after RETURN +9
 257                                                          ;stack frame:
 258                                                          ;[v16a|return|prel|pol|mode|comp
                                                                ;|base|presc]
 259                         tim1PwmCh2Setup  
 260  00011D   88                            PUSH     A
 261                                                          ;--allocate memory
 262  00011E   5201                          SUBW     SP , #$01
 263                                                          ;-variables
 264  000120                                 #define  _007_v8a $00
 265  000120                                 #define  _007_prel $05
 266  000120                                 #define  _007_pol $06
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 11  Assembler
                                               d:\stm8\dbg1\main.asm

 267  000120                                 #define  _007_mode $07
 268  000120                                 #define  _007_compH $08
 269  000120                                 #define  _007_compL $09
 270  000120                                 #define  _007_baseH $0A
 271  000120                                 #define  _007_baseL $0B
 272  000120                                 #define  _007_prescH $0C
 273  000120                                 #define  _007_prescL $0D
 274                                                          ;--disable timer
 275  000120   72115250                      BRES     $5250,#$00
 276                                                          ;--load comparand, Hi firstly
 277  000124   7B08                          LD       A, ($08,SP)
 278  000126   C75267                        LD       $5267, A
 279  000129   7B09                          LD       A, ($09,SP)
 280  00012B   C75268                        LD       $5268, A
 281                                                          ;--prescaler high byte firstly
 282  00012E   7B0C                          LD       A, ($0C,SP)
 283  000130   C75260                        LD       $5260, A      
 284  000133   7B0D                          LD       A, ($0D,SP)
 285  000135   C75261                        LD       $5261, A
 286                                                          ;--load base, high byte first
 287  000138   7B0A                          LD       A, ($0A,SP)
 288  00013A   C75262                        LD       $5262, A
 289  00013D   7B0B                          LD       A, ($0B,SP)
 290  00013F   C75263                        LD       $5263, A
 291                                                          ;--load CCMR2
 292  000142   7B07                          LD       A, ($07,SP)
 293  000144   C75259                        LD       $5259, A
 294                                                          ;--polarity
 295                                                          ; 1)store content of another 
                                                                ;channels
 296  000147   C6525C                        LD       A, $525C
 297  00014A   A40F                          AND      A, #$0F
 298  00014C   6B00                          LD       ($00,SP), A   ; store
 299                                                          ;--2)load data for loading in 
                                                                ;register
 300  00014E   7B06                          LD       A, ($06,SP)
 301  000150   AA01                          OR       A, #$01       ; turn on channel 
 302  000152   4E                            SWAP     A             ;  A << 4
 303                                                          ;--3) apply another regs
 304  000153   1A00                          OR       A, ($00,SP)
 305  000155   C7525C                        LD       $525C, A
 306                                                          ;--turn on main channels
 307  000158   721E526D                      BSET     $526D, #$07   ; MOE bit
 308                                                          ;--CR1
 309  00015C   7B05                          LD       A, ($05,SP)
 310  00015E   C75250                        LD       $5250, A
 311  000161   72105250                      BSET     $5250, #$00
 312                                                          ;--fre memory
 313  000165   5B01                          ADDW     SP, #$01
 314  000167   84                            POP      A
 315  000168   81                            RET      
 316                                   
 317                                                          ;--TEST PASSED!	 
 318                                                          ;===PROCEDURE 'tim1PwmCh3Setup'
 319                                                          ;@presc16,  
 320                                                          ;@base16, -> base of counter, 
                                                                ;ARRL
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 12  Assembler
                                               d:\stm8\dbg1\main.asm

 321                                                          ;@comp16, ->  pulse width, CCR1 
                                                                ;content
 322                                                          ;@mode8,  -> (CCMR) : $60 
                                                                ;PWM_MODE1
 323                                                          ;$70 iPWM_MODE2
 324                                                          ;additional:  $04 fast, $08 
                                                                ;preload en.
 325                                                          ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 326                                                          ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 327                                   
 328                                                          ;stack frame:
 329                                                          ;[v16a|return|prel|pol|mode|comp
                                                                ;|base|presc]
 330                         tim1PwmCh3Setup  
 331  000169   88                            PUSH     A
 332                                                          ;--allocate memory
 333  00016A   5201                          SUBW     SP , #$01
 334                                                          ;-variables
 335  00016C                                 #define  _008_v8a $00
 336  00016C                                 #define  _008_prel $05
 337  00016C                                 #define  _008_pol $06
 338  00016C                                 #define  _008_mode $07
 339  00016C                                 #define  _008_compH $08
 340  00016C                                 #define  _008_compL $09
 341  00016C                                 #define  _008_baseH $0A
 342  00016C                                 #define  _008_baseL $0B
 343  00016C                                 #define  _008_prescH $0C
 344  00016C                                 #define  _008_prescL $0D
 345                                                          ;--disable timer
 346  00016C   72115250                      BRES     $5250,#$00
 347                                                          ;--load comparand, Hi firstly
 348  000170   7B08                          LD       A, ($08,SP)
 349  000172   C75269                        LD       $5269, A
 350  000175   7B09                          LD       A, ($09,SP)
 351  000177   C7526A                        LD       $526A, A
 352                                                          ;--prescaler high byte firstly
 353  00017A   7B0C                          LD       A, ($0C,SP)
 354  00017C   C75260                        LD       $5260, A      
 355  00017F   7B0D                          LD       A, ($0D,SP)
 356  000181   C75261                        LD       $5261, A
 357                                                          ;--load base, high byte first
 358  000184   7B0A                          LD       A, ($0A,SP)
 359  000186   C75262                        LD       $5262, A
 360  000189   7B0B                          LD       A, ($0B,SP)
 361  00018B   C75263                        LD       $5263, A
 362                                                          ;--load CCMR1
 363  00018E   7B07                          LD       A, ($07,SP)
 364  000190   C7525A                        LD       $525A, A
 365                                                          ;--polarity
 366                                                          ; 1)store content of another 
                                                                ;channels
 367  000193   C6525D                        LD       A, $525D
 368  000196   A4F0                          AND      A, #$F0
 369  000198   6B00                          LD       ($00,SP), A   ; store
 370                                                          ;--2)load data for loading in 
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 13  Assembler
                                               d:\stm8\dbg1\main.asm

                                                                ;register
 371  00019A   7B06                          LD       A, ($06,SP)
 372  00019C   AA01                          OR       A, #$01       ; turn on channel 
 373                                                          ;--3)apply another regs
 374  00019E   1A00                          OR       A, ($00,SP)
 375  0001A0   C7525D                        LD       $525D, A
 376                                                          ;--turn on main channels
 377  0001A3   721E526D                      BSET     $526D, #$07   ; MOE bit
 378                                                          ;--CR1
 379  0001A7   7B05                          LD       A, ($05,SP)
 380  0001A9   C75250                        LD       $5250, A
 381  0001AC   72105250                      BSET     $5250, #$00
 382                                                          ;--free memory
 383  0001B0   5B01                          ADDW     SP, #$01
 384  0001B2   84                            POP      A
 385  0001B3   81                            RET      
 386                         
 387                                   
 388                                   
 389                                                          ;--TEST PASSED!	
 390                                                          ;===PROCEDURE 'tim1PwmCh4Setup'
 391                                                          ;@presc16,  
 392                                                          ;@base16, -> base of counter, 
                                                                ;ARRL
 393                                                          ;@comp16, ->  pulse width, CCR1 
                                                                ;content
 394                                                          ;@mode8,  -> (CCMR) : $60 
                                                                ;PWM_MODE1
 395                                                          ;$70 iPWM_MODE2
 396                                                          ;additional:  $04 fast, $08 
                                                                ;preload en.
 397                                                          ;@polarity8 -> (CCER)  $00 
                                                                ;active HI,$02 active low
 398                                                          ;@preload8  ->  $80 preload 
                                                                ;enable, CR1 content
 399                                   
 400                                                          ;stack frame:
 401                                                          ;[v16a|return|prel|pol|mode|comp
                                                                ;|base|presc]
 402                         tim1PwmCh4Setup  
 403  0001B4   88                            PUSH     A
 404                                                          ;--allocate memory
 405  0001B5   5201                          SUBW     SP , #$01
 406                                                          ;-variables
 407  0001B7                                 #define  _009_v8a $00
 408  0001B7                                 #define  _009_prel $05
 409  0001B7                                 #define  _009_pol $06
 410  0001B7                                 #define  _009_mode $07
 411  0001B7                                 #define  _009_compH $08
 412  0001B7                                 #define  _009_compL $09
 413  0001B7                                 #define  _009_baseH $0A
 414  0001B7                                 #define  _009_baseL $0B
 415  0001B7                                 #define  _009_prescH $0C
 416  0001B7                                 #define  _009_prescL $0D
 417                                                          ;--disable timer
 418  0001B7   72115250                      BRES     $5250,#$00
 419                                                          ;--load comparand, Hi firstly
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 14  Assembler
                                               d:\stm8\dbg1\main.asm

 420  0001BB   7B08                          LD       A, ($08,SP)
 421  0001BD   C7526B                        LD       $526B, A
 422  0001C0   7B09                          LD       A, ($09,SP)
 423  0001C2   C7526C                        LD       $526C, A
 424                                                          ;--prescaler high byte firstly
 425  0001C5   7B0C                          LD       A, ($0C,SP)
 426  0001C7   C75260                        LD       $5260, A      
 427  0001CA   7B0D                          LD       A, ($0D,SP)
 428  0001CC   C75261                        LD       $5261, A
 429                                                          ;--load base, high byte first
 430  0001CF   7B0A                          LD       A, ($0A,SP)
 431  0001D1   C75262                        LD       $5262, A
 432  0001D4   7B0B                          LD       A, ($0B,SP)
 433  0001D6   C75263                        LD       $5263, A
 434                                                          ;--load CCMR
 435  0001D9   7B07                          LD       A, ($07,SP)
 436  0001DB   C7525B                        LD       $525B, A
 437                                                          ;--polarity
 438                         ; 1)store content of another channels
 439  0001DE   C6525D                        LD       A, $525D
 440  0001E1   A40F                          AND      A, #$0F
 441  0001E3   6B00                          LD       ($00,SP), A   ; store
 442                                                          ;--2)load data for loading in 
                                                                ;register
 443  0001E5   7B06                          LD       A, ($06,SP)
 444  0001E7   AA01                          OR       A, #$01       ; turn on channel 
 445  0001E9   4E                            SWAP     A             ;  A << 4
 446                                                          ;--3) apply another regs
 447  0001EA   1A00                          OR       A,  ($00,SP)
 448  0001EC   C7525D                        LD       $525D, A
 449                                                          ;--turn on main channels
 450  0001EF   721E526D                      BSET     $526D, #$07   ; MOE bit
 451                                                          ;--CR1
 452  0001F3   7B05                          LD       A, ($05,SP)
 453  0001F5   C75250                        LD       $5250, A
 454  0001F8   72105250                      BSET     $5250, #$00
 455                                                          ;--free mem
 456  0001FC   5B01                          ADDW     SP, #$01
 457  0001FE   84                            POP      A
 458  0001FF   81                            RET      
 459                                   
 460  000200                       startAdcSingleScan  MACRO    max_adc_ch
 461                                   LD       A, $5400
 462                                   AND      A, #$7F       ; clear EOC
 463                                   OR       A, max_adc_ch
 464                                   LD       $5400, A
 465                                   BSET     $5401, #$00
 466  000200                                 MEND     
 467                                   
 468                                                          ;---STM8 ADC initialization 
                                                                ;library
 469                         ;Author : Andrii Androsovych
 470                                                          ;====P R O C E D U R 
                                                                ;E===adcSingleModeSetup
 471                                                          ;@channel8, $00->AIN0, 
                                                                ;$01->AIN1, #$0F->AIN15
 472                                                          ;@prescaler, $00->/2, $10->/3, 
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 15  Assembler
                                               d:\stm8\dbg1\main.asm

                                                                ;$20->/4, $30->/6, $40->/8, 
                                                                ;$50->/10
 473                                                          ;ADC DATA is right aligned!
 474                                                          ;SP+2
 475                                                          ;----------
 476                                                          ;stack frame
 477                                                          ;[A|RET|prescaler|channel]
 478                         adcSingleModeSetup  
 479  000200                                 #define  _001_ch $05
 480  000200                                 #define  _001_presc $04
 481                                                          ;--store 
 482  000200   88                            PUSH     A
 483                                                          ;--disable ADC
 484  000201   72115401                      BRES     $5401, #$00
 485                                                          ;--load channel
 486  000205   7B05                          LD       A, ($05,SP)
 487  000207   A40F                          AND      A, #$0F
 488  000209   C75400                        LD       $5400, A
 489                                                          ;-result alignment- right
 490  00020C   72165402                      BSET     $5402, #$03   ; ALIGN bit
 491                                                          ;--prescaler
 492  000210   7B04                          LD       A, ($04,SP)
 493  000212   A4F0                          AND      A, #$F0
 494  000214   AA01                          OR       A, #$01       ; ADON
 495  000216   C75401                        LD       $5401, A
 496                                                          ;--restore
 497  000219   84                            POP      A
 498  00021A   81                            RET      
 499                                   
 500                                                          ;====P R O C E D U R 
                                                                ;E===adcSingleScanModeSetup,
 501                                                          ;@channel8, $00->AIN0, 
                                                                ;$01->AIN1, #$0F->AIN15
 502                                                          ;@prescaler, $00->/2, $10->/3, 
                                                                ;$20->/4, $30->/6, $40->/8, 
                                                                ;$50->/10
 503                                                          ;ADC DATA is right aligned!
 504                                                          ;SP+2
 505                                                          ;----------
 506                                                          ;stack frame
 507                                                          ;[A|RET|prescaler|channel]
 508                                                          ;--NOTE: result stores in 
                                                                ;ADC_DBxRH, ADC_DBxRL
 509                         adcSingleScanModeSetup  
 510  00021B                                 #define  $05 $05
 511  00021B                                 #define  $04 $04
 512                                                          ;--store 
 513  00021B   88                            PUSH     A
 514                                                          ;--disable ADC
 515  00021C   72115401                      BRES     $5401, #$00
 516                                                          ;--load channel
 517  000220   7B05                          LD       A, ($05,SP)
 518  000222   A40F                          AND      A, #$0F
 519  000224   C75400                        LD       $5400, A
 520                                                          ;- right alignment  scan
 521  000227   72165402                      BSET     $5402, #$03   ; ALIGN bit
 522  00022B   72125402                      BSET     $5402, #$01   ; SCAN bit
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 16  Assembler
                                               d:\stm8\dbg1\main.asm

 523                                                          ;--prescaler
 524  00022F   7B04                          LD       A, ($04,SP)
 525  000231   A4F0                          AND      A, #$F0
 526  000233   AA01                          OR       A, #$01       ; ADON
 527  000235   C75401                        LD       $5401, A
 528  000238   72105401                      BSET     $5401, #$00   ; start
 529                                                          ;--restore
 530  00023C   84                            POP      A
 531  00023D   81                            RET      
 532                                   
 533                                                          ;====P R O C E D U R E===turn on
                                                                ; clk bus
 534                                                          ;@peripherial8
 535                                                          ;TIM1-$80,TIM3-$40,TIM2/5-$20,TI
                                                                ;M4/6-$10,UART-see datasheet,
 536                                                          ;SPI-$2,I2C-1
 537                                                          ;STACK after return +1
 538                         clkBusPeripherial1  
 539  00023E   88                            PUSH     A
 540  00023F   7B04                          LD       A, ($04,SP)
 541  000241   C750C7                        LD       $50C7, A
 542  000244   84                            POP      A
 543  000245   81                            RET      
 544                                                          ;====P R O C E D U R E===turn on
                                                                ; clk bus
 545                                                          ;@peripherial8
 546                                                          ;CAN-$80, ADC-$08, AWU-$04
 547                                                          ;STACK after return +1
 548                         clkBusPeripherial2  
 549  000246   88                            PUSH     A
 550  000247   7B04                          LD       A, ($04,SP)
 551  000249   C750CA                        LD       $50CA, A
 552  00024C   84                            POP      A
 553  00024D   81                            RET      
 554                                                          ;===P R O C E D U R E=switch to 
                                                                ;Crystal
 555                                                          ;--NO PARAMS
 556                                                          ;STACK after return 0
 557                         clkSwitchToCrystal  
 558  00024E   88                            PUSH     A
 559                                                          ;--tuurn on HSE oscillator
 560  00024F   A601                          LD       A, #$01
 561  000251   C750C1                        LD       $50C1, A
 562                         clkSwitchToCrystal_hsi_rdy  
 563                                                          ;--wait until crystal oscillator
                                                                ; ready (HSERDY)
 564  000254 R 720350C1FB                    BTJF     $50C1, #$01, clkSwitchToCrystal_hsi_rdy
 565                                                          ;---Enable the switching 
                                                                ;mechanism
 566  000259   C650C5                        LD       A, $50C5
 567  00025C   AA02                          OR       A, #$02
 568  00025E   C750C5                        LD       $50C5, A
 569                                                          ;---select source clock
 570                                                          ;0xE1: HSI selected as master 
                                                                ;clock source (reset value)
 571                                                          ;0xD2: LSI selected as master 
                                                                ;clock source (only if LSI_EN
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 17  Assembler
                                               d:\stm8\dbg1\main.asm

 572                                                          ;option bit is set)
 573                                                          ;0xB4: HSE selected as master 
                                                                ;clock source
 574  000261   A6B4                          LD       A, #$B4
 575  000263   C750C4                        LD       $50C4, A
 576  000266   9D                            NOP      
 577  000267   9D                            NOP      
 578  000268   9D                            NOP      
 579  000269   9D                            NOP      
 580  00026A   84                            POP      A
 581  00026B   81                            RET      
 582                                   
 583                                   
 584                                                          ;==P R O C E D U R E=="set HSI 
                                                                ;divider"
 585                                                          ;--@ char divider
 586                                                          ;STACK after return +1
 587                         clkSetHsiDivider  
 588                                                          ;--store registers A,X,Y,CC 
                                                                ;(1+2+2+1=6Bytes)
 589  00026C   88                            PUSH     A
 590                                                          ;-read default value 
 591  00026D   C650C6                        LD       A, $50C6
 592                                                          ;---clear all the hsi divider 
                                                                ;bits
 593  000270   A4E7                          AND      A, #$E7
 594                                                          ;--1st paprameter has offset 9 
                                                                ;bytes
 595                                                          ; because A,X,Y,CC,SP has ben 
                                                                ;stored later 
 596  000272   1A04                          OR       A, ($04,SP)
 597                                                          ;---update CLK_CKDIVR
 598  000274   C750C6                        LD       $50C6, A
 599                                                          ;--restore registers
 600  000277   84                            POP      A
 601  000278   81                            RET      
 602                                   
 603                                                          ;======P R O C e D U R E==="set 
                                                                ;CPU divider"
 604                                                          ;@ char divider 
 605                                                          ;STACK after return +1
 606                         clkSetCpuDivider  
 607                                                          ;--store registers A,X,Y,CC 
                                                                ;(1+2+2+1=6Bytes)
 608  000279   88                            PUSH     A
 609                                                          ;-read default value 
 610  00027A   C650C6                        LD       A, $50C6
 611                                                          ;---clear all the hsi divider 
                                                                ;bits
 612  00027D   A4F8                          AND      A, #$f8
 613                                                          ;--1st paprameter has offset 9 
                                                                ;bytes
 614                                                          ; because A,X,Y,CC,SP has ben 
                                                                ;stored later
 615  00027F   1A04                          OR       A, ($04,SP)
 616                                                          ;---update CLK_CKDIVR
 617  000281   C750C6                        LD       $50C6, A
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 18  Assembler
                                               d:\stm8\dbg1\main.asm

 618                                                          ;--restore registers
 619  000284   84                            POP      A
 620  000285   81                            RET      
 621                                   
 622                                   
 623                                   
 624                         ;------I  S  R----------
 625                         
 626                         tim4Isr   
 627                                                          ;--clear flag
 628  000286   72115344                      BRES     $5344, #$00
 629  00028A   901C500A                      BCPL     $500A, #$06
 630  00028E   80                            IRET     
 631                                   
 632                                   
 633                                   
 634                         onTim1Update  
 635                                                          ;--clear flag
 636  00028F   A600                          LD       A, #$00
 637  000291   C75255                        LD       $5255, A
 638                                                          ;--load ADC To PWM register
 639                                                          ;;AIN 3, 4,5,6
 640  000294   C653E6                        LD       A, $53E6
 641  000297   C75265                        LD       $5265, A
 642  00029A   C653E7                        LD       A, $53E7
 643  00029D   C75266                        LD       $5266, A
 644                                                          ;--4
 645  0002A0   C653E8                        LD       A, $53E8
 646  0002A3   C75267                        LD       $5267, A
 647  0002A6   C653E9                        LD       A, $53E9
 648  0002A9   C75268                        LD       $5268, A
 649                                                          ;--5
 650  0002AC   C653EA                        LD       A, $53EA
 651  0002AF   C75269                        LD       $5269, A
 652  0002B2   C653EB                        LD       A, $53EB
 653  0002B5   C7526A                        LD       $526A, A
 654                                                          ;--6
 655  0002B8   C653EC                        LD       A, $53EC
 656  0002BB   C7526B                        LD       $526B, A
 657  0002BE   C653ED                        LD       A, $53ED
 658  0002C1   C7526C                        LD       $526C, A
 659                                                          ;--start ADC
 660                                   startAdcSingleScan #$06
 660  0002C4   C65400                        LD       A, $5400
 660  0002C7   A47F                          AND      A, #$7F       ; clear EOC
 660  0002C9   AA06                          OR       A, #$06
 660  0002CB   C75400                        LD       $5400, A
 660  0002CE   72105401                      BSET     $5401, #$00
 661  0002D2                                 
 662  0002D2   80                            IRET     
 663                         
 664  0002D3 R                               interrupt NonHandledInterrupt
 665                         NonHandledInterrupt.l  
 666  0002D3   80                            iret     
 667                                   segment  'vectit'
 668  000000 R 00000000                      dc.l     {$82000000+main}  ; reset
 669  000004 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; trap
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 19  Assembler
                                               d:\stm8\dbg1\main.asm

 670  000008 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq0
 671  00000C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq1
 672  000010 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq2
 673  000014 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq3
 674  000018 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq4
 675  00001C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq5
 676  000020 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq6
 677  000024 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq7
 678  000028 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq8
 679  00002C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq9
 680  000030 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq10
 681  000034 R 00000000                      dc.l     {$82000000+onTim1Update}  ; irq11
 682  000038 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq12
 683  00003C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq13
 684  000040 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq14
 685  000044 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq15
 686  000048 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq16
 687  00004C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq17
 688  000050 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq18
 689  000054 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq19
 690  000058 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq20
 691  00005C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq21
 692  000060 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq22
 693  000064 R 00000000                      dc.l     {$82000000+tim4Isr}  ; irq23
 694  000068 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq24
 695  00006C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq25
 696  000070 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq26
 697  000074 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq27
 698  000078 R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq28
 699  00007C R 00000000                      dc.l     {$82000000+NonHandledInterrupt}  ; irq29
 700                         
 701  000080                                 end      
STMicroelectronics assembler v4.52   (C)1987-2024   Mon Aug 26 18:38:50 2024
Page 20  Assembler
                                               d:\stm8\dbg1\main.asm

Symbol Name                       Value     Call       Type  Scope      Rel.  Line  Privacy  Segment   Size  Bytes File

NonHandledInterrupt               000002D3  interrupt  LONG  Internal   rel    665  private  text         1     0  -

adcSingleModeSetup                    0200         no  WORD  Internal   rel    478  private  text        27     0  -
adcSingleScanModeSetup                021B         no  WORD  Internal   rel    509  private  text        35     0  -

clear_ram0                        00000007         no  LONG  Internal   rel     17  private  text        10     0  -
clear_ram1                        00000011         no  LONG  Internal   rel     29  private  text        10     0  -
clear_stack                       0000001B         no  LONG  Internal   rel     40  private  text       180     0  -
clkBusPeripherial1                    023E         no  WORD  Internal   rel    538  private  text         8     0  -
clkBusPeripherial2                    0246         no  WORD  Internal   rel    548  private  text         8     0  -
clkSwitchToCrystal                    024E         no  WORD  Internal   rel    557  private  text         6     0  -
clkSwitchToCrystal_hsi_rdy            0254         no  WORD  Internal   rel    562  private  text        24     0  -
clkSetHsiDivider                      026C         no  WORD  Internal   rel    587  private  text        13     0  -
clkSetCpuDivider                      0279         no  WORD  Internal   rel    606  private  text        13     0  -

infinite_loop                     000000CF         no  LONG  Internal   rel    158  private  text         3     0  -

main                              00000000         no  LONG  Internal   rel      7  private  text         7     0  -

onTim1Update                          028F         no  WORD  Internal   rel    634  private  text        68     0  -

ram0_start                              00         no  BYTE  Internal   ABS     14  private  text         0     0  -
ram0_end                                FF         no  BYTE  Internal   ABS     15  private  text         0     0  -
ram1_start                            0100         no  WORD  Internal   ABS     26  private  text         0     0  -
ram1_end                              01FF         no  WORD  Internal   ABS     27  private  text         0     0  -

stack_start                           0200         no  WORD  Internal   ABS     37  private  text         0     0  -
stack_end                             03FF         no  WORD  Internal   ABS     38  private  text         0     0  -

tim1PwmCh1Setup                       00D2         no  WORD  Internal   rel    186  private  text        75     0  -
tim1PwmCh2Setup                       011D         no  WORD  Internal   rel    259  private  text        76     0  -
tim1PwmCh3Setup                       0169         no  WORD  Internal   rel    330  private  text        75     0  -
tim1PwmCh4Setup                       01B4         no  WORD  Internal   rel    402  private  text        76     0  -
tim4Isr                               0286         no  WORD  Internal   rel    626  private  text         9     0  -


26 labels
No errors on assembly of 'd:\stm8\dbg1\main.asm'